scale_color_manual(values=c("red", "black")) +
facet_grid(libprep ~ BT.x) +
theme_bw() +
geom_text(x=1, y=2, label="Scatter plot") +
ggtitle("Binomial (no BF correction) [% = color escapers]") +
labs(x = "Coverage, rep 2", y = "AI, rep 2", color = "Сoherence on 2 reps") +
scale_x_continuous(trans='log2') +
theme(legend.position="bottom")
plt_bt = ggplot(DF_forplot_10mln$BTBF, aes(meanCOV.y, AI.y)) +
geom_point(aes(color=BT.xyeq), size=0.1) +
scale_color_manual(values=c("red", "black")) +
facet_grid(libprep ~ BT.x) +
theme_bw() +
geom_text(x=1, y=2, label="Scatter plot") +
ggtitle("Binomial [% = color escapers]") +
labs(x = "Coverage, rep 2", y = "AI, rep 2", color = "Сoherence on 2 reps") +
scale_x_continuous(trans='log2') +
theme(legend.position="bottom")
plt_btcc = ggplot(DF_forplot_10mln$BTBFCC, aes(meanCOV.y, AI.y)) +
geom_point(aes(color=BT.xyeq), size=0.1) +
scale_color_manual(values=c("red", "black")) +
facet_grid(libprep ~ BT.x) +
theme_bw() +
ggtitle("Corrected Binomial [% = color escapers]") +
labs(x = "Coverage, rep 2", y = "AI, rep 2", color = "Сoherence on 2 reps") +
scale_x_continuous(trans='log2') +
theme(legend.position="bottom")
plt_bt_p = plt_bt +
geom_text(
data = percent_of_diff_color_10mln_df$BTBF[percent_of_diff_color_10mln_df$BTBF$who == "y_color_not_like_x_division",],
mapping = aes(x = 16000, y = 0.1, label = P_color_escapers)
) +
geom_text(
data = percent_of_diff_color_10mln_df$BTBF[percent_of_diff_color_10mln_df$BTBF$who == "y_color_not_like_x_division",],
mapping = aes(x = 16000, y = 0.9, label = paste("#G =", numberOfGenes))
)
plt_btcc_p = plt_btcc +
geom_text(
data = percent_of_diff_color_10mln_df$BTBFCC[percent_of_diff_color_10mln_df$BTBFCC$who == "y_color_not_like_x_division",],
mapping = aes(x = 16000, y = 0.1, label = P_color_escapers)
) +
geom_text(
data = percent_of_diff_color_10mln_df$BTBFCC[percent_of_diff_color_10mln_df$BTBFCC$who == "y_color_not_like_x_division",],
mapping = aes(x = 16000, y = 0.9, label = paste("#G =", numberOfGenes))
)
plot_grid(plt_bt_p, plt_btcc_p, labels = "auto", rows=1)
View(data_10mln)
sampleMreps10
(sampleMreps10-1)%/%5+1
library("tidyverse")
library("knitr")
source("ASE_functions.R")
source("PerformAIAnalysis.R")
setwd("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R")
library("tidyverse")
library("knitr")
source("ASE_functions.R")
source("PerformAIAnalysis.R")
library("tidyverse")
library("knitr")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/ASE_functions.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/PerformAIAnalysis.R")
library("tidyverse")
library("knitr")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/ASE_functions.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/PerformAIAnalysis_CC.R")
experimentNames <- c("control","DMSO","low","medium","high")
techReps <- c(2,2,2,5,2)
designMatrix <- BuildDesign(experimentNames, techReps)
inTabs <- "../../../data/5aza/pr_20180714_ISEKI_processed_gene_extended2.txt"
geneCountTab <- GetGatkPipelineTabs(inTabs, designMatrix$techReps, multiple = F)
head(geneCountTab)
aiTable <- do.call(cbind, lapply(1:length(designMatrix$techReps), function(x){
round(CountsToAI(geneCountTab, reps = unlist(designMatrix$replicateNums[x]),thr=10)$AI,3)
}))
aiTable <- data.frame(geneCountTab$ensembl_gene_id, aiTable)
colnames(aiTable) <- c("ensembl_gene_id", designMatrix$experimentNames)
head(aiTable)
ggplot(aiTable, aes_string(x=as.name(designMatrix$experimentNames[2]), y=as.name(designMatrix$experimentNames[5]))) +
geom_point(size=0.5) +
theme_bw() +
coord_fixed()
DE_SG3_SG2 <- read_csv("~/Dropbox (Partners HealthCare)/MAE screen/DE_analysis/DE_SG3_SG2.txt")
ai_plus_DE_low_DMSO <- merge(aiTable[,c(1,3,4)], DE_SG3_SG2[,c(1:3)], by.x="ensembl_gene_id", by.y="gene_id")
ai_plus_DE_low_DMSO$aiDiff <- ai_plus_DE_low_DMSO$low - ai_plus_DE_low_DMSO$DMSO
ai_plus_DE_low_DMSO <- ai_plus_DE_low_DMSO[!is.na(ai_plus_DE_low_DMSO$DMSO),]
ai_plus_DE_low_DMSO <- ai_plus_DE_low_DMSO[!is.na(ai_plus_DE_low_DMSO$low),]
ApplyQuintiles <- function(x) {
cut(x, breaks=seq(0, 0.6, by = 0.10),
labels=c("<0.1","0.1-0.2","0.2-0.3","0.3-0.4","0.4-0.5", ">0.5"), include.lowest=TRUE)
}
ai_plus_DE_low_DMSO$aiDiff_q <- sapply(abs(ai_plus_DE_low_DMSO$aiDiff), ApplyQuintiles)
table(ai_plus_DE_low_DMSO$aiDiff_q)
ai_thr <- 0.1
ai_plus_DE_low_DMSO$ai_col <- ifelse(ai_plus_DE_low_DMSO$aiDiff > ai_thr, "red", "gray")
ggplot(ai_plus_DE_low_DMSO, aes(x=aiDiff, y=log2FoldChange)) +
geom_point(size=0.5) +
xlim(c(-0.5, 0.5))
ggplot(ai_plus_DE_low_DMSO, aes(x=baseMean, y=log2FoldChange, col=ai_col)) +
geom_point(size=0.5) +
scale_x_continuous(trans="log10") +
scale_color_manual(values=ai_plus_DE_low_DMSO$ai_col) +
theme_bw()
CIs_DMSO <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab, unlist(designMatrix$replicateNums[2]), Q=0.95, EPS=1.3, thr=0)
CIs_high <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab, unlist(designMatrix$replicateNums[5]), Q=0.95, EPS=1.3, thr=0)
CIs <- merge(CIs_DMSO$Output[,c("ID", "AI", "BT_CIleft_CC","BT_CIright_CC")], CIs_high$Output[,c("ID", "AI", "BT_CIleft_CC","BT_CIright_CC")], by="ID")
colnames(CIs) <- c("ID", "AI_DMSO", "CI_left_DMSO", "CI_right_DMSO", "AI_high", "CI_left_high", "CI_right_high")
head(CIs)
head(CIs)
thr <- 40
minDifference <- 0.1
DiffAI_DMSO_high <- PerformBinTestAIAnalysisForTwoConditions_knownCC(geneCountTab,
vect1CondReps = unlist(designMatrix$replicateNums[2]),
vect2CondReps = unlist(designMatrix$replicateNums[5]),
vect1CondRepsCombsCC=CIs_DMSO$CC,
vect2CondRepsCombsCC=CIs_high$CC,
Q=0.95,
thr=thr,
minDifference = minDifference
)
table(DiffAI_DMSO_high$BT_CC_thrDiff)
View(DiffAI_DMSO_high)
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/ASE_functions.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/PerformAIAnalysis_CC.R")
nameColumns <- function(exp_n, rep_n)  {
paste0("exp", rep(exp_n, 2*rep_n), "_rep", rep(1:rep_n, each = 2), "_", rep(c("ref", "alt"), rep_n))
}
experimentNames <- c("H8_r1","s1.1","s4.11","s6.1","s8.1.4", "H8_r2")
techReps <- c(2,2,2,2,2,2)
designMatrix <- BuildDesign(experimentNames, techReps)
inTabs <- "~/Dropbox (Partners HealthCare)/our_papers/5aza/data/ASE_results/5aza_add_processed_gene_extended2.txt"
geneCountTab_Jan <- GetGatkPipelineTabs(inTabs, c(2,2,2), multiple = F, chrom = T) #H8_rep1,H8_rep2,s1.1_rep1,s1.1_rep2,s4.11_rep1,s4.11_rep2
inTabs <- "~/Dropbox (Partners HealthCare)/our_papers/5aza/data/ASE_results/5aza_tech_Feb_upd_processed_gene_extended2.txt"
geneCountTab_Feb <- GetGatkPipelineTabs(inTabs, c(2,2,2), multiple = F) #6.1_rep1,6.1_rep2, 8.1.4_rep1,8.1.4_rep2, H8_rep1,H8_rep2
geneCountTab_add <- merge(geneCountTab_Jan, geneCountTab_Feb, by.x="ensembl_gene_id", by.y="ensembl_gene_id")
geneCountTab_add <- geneCountTab_add[,c(1,14,2:13,15:26)]
colnames(geneCountTab_add)[3:26] <- c(nameColumns(1,2), nameColumns(2,2), nameColumns(3,2), nameColumns(4,2), nameColumns(5,2), nameColumns(6,2))
geneCountTab_add <- geneCountTab_add %>% filter(chr != "chrX" & chr!="chrY")
geneCountTab_add <- geneCountTab_add[,c(1,3:26)]
aiTable <- do.call(cbind, lapply(1:length(designMatrix$techReps), function(x){
round(CountsToAI(geneCountTab_add, reps = unlist(designMatrix$replicateNums[x]),thr=10)$AI,3)
}))
aiTable <- data.frame(geneCountTab_add$ensembl_gene_id, aiTable)
colnames(aiTable) <- c("ensembl_gene_id", designMatrix$experimentNames)
head(aiTable)
thr_coverage <- 10
experimentN <- 1
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
condName="Condition",
pt = 0.5,
thr = thr_coverage)
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
View(DiffAI_DMSO_high)
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
View(df)
df_o <- df$Output
View(df_o)
colnames(df_o)
colnames(df_out)[c(1,4,8,9)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]))
df_out <- df$Output
colnames(df_out)[c(1,4,8,9)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]))
View(df_out)
for (experimentN in 1:6) {
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out <- df$Output
colnames(df_out)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
aiTable <- merge(aiTable, df_out[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
}
View(aiTable)
experimentN <- 3
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out <- df$Output
colnames(df_out)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
aiTable <- merge(aiTable, df_out[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
View(aiTable)
aiTable_backup <- aiTable
for (experimentN in 4:6) {
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out <- df$Output
colnames(df_out)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
aiTable <- merge(aiTable, df_out[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
}
experimentN <- 6
View(aiTable)
write.table(aiTable[,c(1,8:27)], file="~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables/5clones_all_AIs_with_CIs.txt", row.names = F, quote = F)
View(CIs)
View(CIs_DMSO)
head(CIs)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("knitr")
library("cowplot")
library("biomaRt")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/ASE_functions.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/PerformAIAnalysis_CC.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/DownstreamASE.R")
# naming columns
nameColumns <- function(exp_n, rep_n)  {
paste0("exp", rep(exp_n, 2*rep_n), "_rep", rep(1:rep_n, each = 2), "_", rep(c("ref", "alt"), rep_n))
}
isMAE_test_CI <- function(x) {
thr <- x[3]
if ((is.na(x[1]))|(is.na(x[2]))) {
return("nd")
}
else {
if ((x[1])&((x[2]>=thr))) {
return("129_monoallelic")
}
else if ((x[1])&((x[2]<=(1-thr)))) {
return("CAST_monoallelic")
}
else if ((x[1])&((x[2]>=0.5))) {
return("129_biased")
}
else if ((x[1])&((x[2]<0.5))) {
return("CAST_biased")
}
else {return("biallelic")}
}
}
experimentNames <- c("control","DMSO","low","medium","high")
techReps <- c(2,2,2,5,2)
designMatrix <- BuildDesign(experimentNames, techReps)
inTabs <- "~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Analysis/pr_20180714_ISEKI_processed_gene_extended2.txt"
geneCountTab <- GetGatkPipelineTabs(inTabs, designMatrix$techReps, multiple = F, chrom = T)
colnames(geneCountTab)[2:27] <- c(nameColumns(1,2), nameColumns(2,2), nameColumns(3,2), nameColumns(4,5), nameColumns(5,2))
geneCountTab_chrX <- geneCountTab %>% filter(chr == "chrX") %>% dplyr::select(-chr)
geneCountTab <- geneCountTab %>% filter(chr != "chrX") %>% dplyr::select(-chr)
head(geneCountTab)
aiTable <- do.call(cbind, lapply(1:length(designMatrix$techReps), function(x){
round(CountsToAI(geneCountTab, reps = unlist(designMatrix$replicateNums[x]),thr=10)$AI,3)
}))
aiTable <- data.frame(geneCountTab$ensembl_gene_id, aiTable)
colnames(aiTable) <- c("ensembl_gene_id", designMatrix$experimentNames)
head(aiTable)
aiTable <- do.call(cbind, lapply(1:length(designMatrix$techReps), function(x){
round(CountsToAI(geneCountTab, reps = unlist(designMatrix$replicateNums[x]),thr=10)$AI,3)
}))
aiTable <- data.frame(geneCountTab$ensembl_gene_id, aiTable)
colnames(aiTable) <- c("ensembl_gene_id", designMatrix$experimentNames)
head(aiTable)
write.table(aiTable, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables/5aza_all_AIs.txt"), quote = F, row.names = F)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("knitr")
library("cowplot")
library("biomaRt")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/ASE_functions.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/PerformAIAnalysis_CC.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/DownstreamASE.R")
names_samples <- c("SG1_1", "SG1_2","SG2_1", "SG2_2","SG3_1", "SG3_2","SG4_1", "SG4_2", "SG4_3", "SG4_4", "SG4_5", "SG5_1", "SG5_2")
inTabs_sub <- paste0("~/5aza/MLN_", names_samples, "_merged_processed_gene_extended2.txt")
paste0("~/5aza/MLN15242808_20180713_SG3_1_SG5746_S5_R1_001_merged_processed_gene_extended2.txt")
geneCountTab_sub <- GetGatkPipelineTabs(inFiles = inTabs_sub, nReps = rep(1,13), multiple = T, chrom = F)
View(geneCountTab_sub)
CIs_all <- lapply(1:length(designMatrix$techReps), function(x){
resCC <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_sub,
unlist(designMatrix$replicateNums[x]),
Q=0.95,
EPS=1.3,
thr=NA)
resCC$CC
})
sink("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Analysis/CC_backup_upd.txt")
writeLines(unlist(lapply(CIs_all, paste, collapse=" ")))
sink()
strangeIDs <- read.table("~/Desktop/strangeIDs.tab", quote="\"", comment.char="")
View(strangeIDs)
mm10_genes_ensembl <- read.csv("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables_SV/mm10_genes_ensembl.txt", sep="")
View(mm10_genes_ensembl)
m1 <- merge(strangeIDs, mm10_genes_ensembl, by.x="V1", by.y="ensembl_gene_id")
m1 <- merge(strangeIDs, mm10_genes_ensembl, by.x="V1", by.y="ensembl_gene_id", all.x=T)
View(m1)
library("tidyverse")
library("knitr")
library("biomaRt")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/ASE_functions.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/PerformAIAnalysis_CC.R")
nameColumns <- function(exp_n, rep_n)  {
paste0("exp", rep(exp_n, 2*rep_n), "_rep", rep(1:rep_n, each = 2), "_", rep(c("ref", "alt"), rep_n))
}
experimentNames <- c("H8_r1","s1.1","s4.11","s6.1","s8.1.4", "H8_r2")
techReps <- c(2,2,2,2,2,2)
designMatrix <- BuildDesign(experimentNames, techReps)
inTabs <- "~/Dropbox (Partners HealthCare)/our_papers/5aza/data/ASE_results/5aza_add_upd_processed_gene_extended2.txt"
geneCountTab_Jan <- GetGatkPipelineTabs(inTabs, c(2,2,2), multiple = F, chrom = T) #H8_rep1,H8_rep2,s1.1_rep1,s1.1_rep2,s4.11_rep1,s4.11_rep2
inTabs <- "~/Dropbox (Partners HealthCare)/our_papers/5aza/data/ASE_results/5aza_tech_Feb_upd_upd_processed_gene_extended2.txt"
geneCountTab_Feb <- GetGatkPipelineTabs(inTabs, c(2,2,2), multiple = F) #6.1_rep1,6.1_rep2, 8.1.4_rep1,8.1.4_rep2, H8_rep1,H8_rep2
geneCountTab_add <- merge(geneCountTab_Jan, geneCountTab_Feb, by.x="ensembl_gene_id", by.y="ensembl_gene_id")
geneCountTab_add <- geneCountTab_add[,c(1,14,2:13,15:26)]
colnames(geneCountTab_add)[3:26] <- c(nameColumns(1,2), nameColumns(2,2), nameColumns(3,2), nameColumns(4,2), nameColumns(5,2), nameColumns(6,2))
geneCountTab_add <- geneCountTab_add[,c(1,3:26)]
aiTable <- do.call(cbind, lapply(1:length(designMatrix$techReps), function(x){
round(CountsToAI(geneCountTab_add, reps = unlist(designMatrix$replicateNums[x]),thr=10)$AI,3)
}))
aiTable <- data.frame(geneCountTab_add$ensembl_gene_id, aiTable)
colnames(aiTable) <- c("ensembl_gene_id", designMatrix$experimentNames)
head(aiTable)
thr_coverage <- 10
for (experimentN in 1:6) {
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out <- df$Output
colnames(df_out)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
aiTable <- merge(aiTable, df_out[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
}
for (experimentN in 1:6) {
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out <- df$Output
colnames(df_out)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
aiTable <- merge(aiTable, df_out[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
}
#aiTable <- na.omit(aiTable)
thr_MAE <- 0.85
aiTable <- aiTable %>%
mutate(isMAE_H8 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), diff_H8_r1, H8_r1, thr_MAE)) %>%
mutate(isMAE_s1.1 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), diff_s1.1, s1.1, thr_MAE)) %>%
mutate(isMAE_s4.11 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), diff_s4.11, s4.11, thr_MAE)) %>%
mutate(isMAE_s6.1 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), diff_s6.1, s6.1, thr_MAE)) %>%
mutate(isMAE_s8.1.4 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), diff_s8.1.4, s8.1.4, thr_MAE))
aiTable <- aiTable %>%
mutate(isMAE = mapply(function(x1,x2,x3,x4,x5) findMAE(c(x1,x2,x3,x4,x5)), isMAE_H8, isMAE_s1.1, isMAE_s4.11, isMAE_s6.1, isMAE_s8.1.4))
table(aiTable$isMAE)
ensembl <- useMart("ensembl", dataset="mmusculus_gene_ensembl")
genes <- getBM(c("ensembl_gene_id", "external_gene_name", "chromosome_name"), mart=ensembl)
aiTable_genes <- merge(aiTable, genes, by.x="ensembl_gene_id", by.y="ensembl_gene_id", all.x=T)
aiTable_genes <- aiTable_genes[,c(1,20,21,2:19)]
#write.csv(aiTable, file="~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables/5clones_MAE_genes_full_0.85_remove_chr4.txt", quote = F, row.names = F)
#write.csv(aiTable_genes, file="~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables/5clones_MAE_genes_full_0.85_ext_gene_name_remove_chr4.txt", quote = F, row.names = F)
write.csv(aiTable, file="~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables_SV/5clones_untreated//5clones_MAE_genes_full_0.85_all_chr.txt", quote = F, row.names = F)
write.csv(aiTable_genes, file="~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables_SV/5clones_untreated//5clones_MAE_genes_full_0.85_ext_gene_name_all_chr.txt", quote = F, row.names = F)
experimentN <- 1
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out <- df$Output
colnames(df_out)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
View(df_out)
View(aiTable)
aiTable <- merge(aiTable, df_out[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
View(df_out)
experimentN <- 2
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out2 <- df$Output
colnames(df_out2)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
experimentN <- 3
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out3 <- df$Output
colnames(df_out3)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
View(df_out3)
experimentN <- 4
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out4 <- df$Output
colnames(df_out4)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
experimentN <- 5
df <- PerformBinTestAIAnalysisForConditionNPoint(geneCountTab_add,
vectReps = unlist(designMatrix$replicateNums[experimentN]),
pt = 0.5,
thr = thr_coverage)
df_out5 <- df$Output
colnames(df_out5)[c(1,4,8,9,11)] <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIleft_CC_",designMatrix$experimentNames[experimentN]),
paste0("BT_CIright_CC_",designMatrix$experimentNames[experimentN]),
paste0("AI_diff_",designMatrix$experimentNames[experimentN]))
View(aiTable)
aiTable <- merge(aiTable, df_out2[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
aiTable <- merge(aiTable, df_out3[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
aiTable <- merge(aiTable, df_out4[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
aiTable <- merge(aiTable, df_out5[,c(1,4,8,9,11)], by="ensembl_gene_id", all=T)
View(aiTable)
write.csv(aiTable[,c(1,8:27)], file="~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables_SV/5clones_untreated/5clones_MAE_genes_full_0.85_all_chr.txt", quote = F, row.names = F)
4%2
4 / 2
4%:2
4%%2
thr_MAE <- 0.85
colnames(aiTable)
isMAE_test_CI()
findMAE <- function(x) {
mon <- 0
if (length(x)==1) {
mon=NA
}
else {
not_nm_count <- length(x) - sum(x=="nd")
if (not_nm_count==0) mon="nd"
else if ((sum(x=="CAST_monoallelic")+sum(x=="CAST_biased")==not_nm_count)|(sum(x=="129_monoallelic")+sum(x=="129_biased")==not_nm_count)) mon="gen_sk"
else if ((sum(x=="CAST_monoallelic")>0)|(sum(x=="129_monoallelic")>0)) mon="monoallelic"
else if ((sum(x=="CAST_biased")>0)|(sum(x=="129_biased")>0)) mon="biased"
else if (sum(x=="biallelic")==not_nm_count) mon="biallelic"
else mon="other"
}
return(mon)
}
isMAE_test_CI <- function(x) {
thr <- x[3]
if ((is.na(x[1]))|(is.na(x[2]))) {
return("nd")
}
else {
if ((x[1])&((x[2]>=thr))) {
return("129_monoallelic")
}
else if ((x[1])&((x[2]<=(1-thr)))) {
return("CAST_monoallelic")
}
else if ((x[1])&((x[2]>=0.5))) {
return("129_biased")
}
else if ((x[1])&((x[2]<0.5))) {
return("CAST_biased")
}
else {return("biallelic")}
}
}
aiTable <- aiTable %>%
mutate(isMAE_H8 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), AI_diff_H8_r1, H8_r1, thr_MAE)) %>%
mutate(isMAE_s1.1 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), AI_diff_s1.1, s1.1, thr_MAE)) %>%
mutate(isMAE_s4.11 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), AI_diff_s4.11, s4.11, thr_MAE)) %>%
mutate(isMAE_s6.1 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), AI_diff_s6.1, s6.1, thr_MAE)) %>%
mutate(isMAE_s8.1.4 = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), AI_diff_s8.1.4, s8.1.4, thr_MAE))
aiTable <- aiTable %>%
mutate(isMAE = mapply(function(x1,x2,x3,x4,x5) findMAE(c(x1,x2,x3,x4,x5)), isMAE_H8, isMAE_s1.1, isMAE_s4.11, isMAE_s6.1, isMAE_s8.1.4))
table(aiTable$isMAE)
write.csv(aiTable[,c(1,8:27)], file="~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables_SV/5clones_untreated/5clones_no_classification_all_chr.txt", quote = F, row.names = F)
ensembl <- useMart("ensembl", dataset="mmusculus_gene_ensembl")
genes <- getBM(c("ensembl_gene_id", "external_gene_name", "chromosome_name"), mart=ensembl)
aiTable_genes <- merge(aiTable, genes, by.x="ensembl_gene_id", by.y="ensembl_gene_id", all.x=T)
colnames(aiTable_genes)
aiTable_genes <- aiTable_genes[,c(1,34,35,8:33)]
colnames(aiTable_genes)
write.csv(aiTable_genes, file="~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables_SV/5clones_untreated/5clones_MAE_genes_full_0.85_ext_gene_name_all_chr.txt", quote = F, row.names = F)
table(aiTable_genes$chromosome_name)
aiTable_genes %>% filter(chromosome_name == "X")
aiTable_genes %>% filter(chromosome_name == "X") %>% select(isMAE)
aiTable_genes %>% filter(chromosome_name == "X") %>% dplyr::select(isMAE)
a <- aiTable_genes %>% filter(chromosome_name == "X") %>% dplyr::select(isMAE)
table(a)
a <- aiTable_genes %>% filter(chromosome_name == "X")
View(a)
a %>% select(starts_with("AI"))
a %>% dplyr::select(starts_with("AI"))
a1 %>% dplyr::select(starts_with("AI"))
a1 <- a %>% dplyr::select(starts_with("AI"))
View(a1)
a1 <- a %>% dplyr::select(starts_with("AI"), isMAE)
a1 <- a %>% dplyr::select(ensembl_gene_id, starts_with("AI"), isMAE)
View(a1)
View(geneCountTab_add)
