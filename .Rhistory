labels=c("<0.05","0.05-0.15","0.15-0.25","0.25-0.35","0.35-0.45","0.45-0.55", "0.55-0.65", "0.65-0.75","0.75-0.85","0.85-0.95",">0.95"), include.lowest=TRUE)
}
df_compare_noNA <- na.omit(df_compare)
df_compare_noNA$AI1_class <- sapply(df_compare_noNA$meanAI1, ApplyCuts)
table(df_compare_noNA$AI1_class)
ai_changes_violin <- ggplot(df_compare_noNA, aes(x = AI1_class, y = meanAI2)) +
geom_violin() +
theme_bw() +
xlab(paste0("AI, ",designMatrix$experimentNames[experimentA])) +
ylab(paste0("AI, ",designMatrix$experimentNames[experimentB]," 5aza")) +
geom_jitter(size=0.2, aes(alpha=DAE), col="red", width=0.1) +
scale_alpha_manual(values=c(0, 0.5)) +
theme(legend.position = "None")
ai_changes_violin
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_changes_violin_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_cov_threshold_",thr_coverage,".pdf")
save_plot(ai_changes_violin, fig_name, base_aspect_ratio = 3)
ApplyCuts <- function(x) {
cut(x, breaks=seq(0, 1, by = 0.10),
labels=c("<0.1","0.1-0.2","0.2-0.3","0.3-0.4","0.4-0.5", "0.5-0.6", "0.6-0.7","0.7-0.8","0.8-0.9",">0.9"), include.lowest=TRUE)
}
ApplyCuts2 <- function(x) {
cut(x, breaks=seq(-0.05, 1.05, by = 0.10),
labels=c("<0.05","0.05-0.15","0.15-0.25","0.25-0.35","0.35-0.45","0.45-0.55", "0.55-0.65", "0.65-0.75","0.75-0.85","0.85-0.95",">0.95"), include.lowest=TRUE)
}
df_compare_noNA <- na.omit(df_compare)
df_compare_noNA$AI1_class <- sapply(df_compare_noNA$meanAI1, ApplyCuts)
table(df_compare_noNA$AI1_class)
ai_changes_violin <- ggplot(df_compare_noNA, aes(x = AI1_class, y = meanAI2)) +
geom_violin() +
theme_bw() +
xlab(paste0("AI, ",designMatrix$experimentNames[experimentA])) +
ylab(paste0("AI, ",designMatrix$experimentNames[experimentB]," 5aza")) +
geom_jitter(size=0.2, aes(alpha=DAE), col="red", width=0.1) +
scale_alpha_manual(values=c(0, 0.5)) +
theme(legend.position = "None")
ai_changes_violin
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_changes_violin_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_cov_threshold_",thr_coverage,".pdf")
save_plot(ai_changes_violin, fig_name, base_aspect_ratio = 3)
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_changes_violin_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_cov_threshold_",thr_coverage,".pdf")
save_plot(ai_changes_violin, fig_name, base_aspect_ratio = 3)
fig_name
dev.off()
gpplot(1)
ggplot(1)
ggplot(df)
ggplot(TPMs_all)
ggplot(TPMs_all, aes(x=1, y=1)) + geom_point()
ApplyCuts <- function(x) {
cut(x, breaks=seq(0, 1, by = 0.10),
labels=c("<0.1","0.1-0.2","0.2-0.3","0.3-0.4","0.4-0.5", "0.5-0.6", "0.6-0.7","0.7-0.8","0.8-0.9",">0.9"), include.lowest=TRUE)
}
ApplyCuts2 <- function(x) {
cut(x, breaks=seq(-0.05, 1.05, by = 0.10),
labels=c("<0.05","0.05-0.15","0.15-0.25","0.25-0.35","0.35-0.45","0.45-0.55", "0.55-0.65", "0.65-0.75","0.75-0.85","0.85-0.95",">0.95"), include.lowest=TRUE)
}
df_compare_noNA <- na.omit(df_compare)
df_compare_noNA$AI1_class <- sapply(df_compare_noNA$meanAI1, ApplyCuts)
table(df_compare_noNA$AI1_class)
ai_changes_violin <- ggplot(df_compare_noNA, aes(x = AI1_class, y = meanAI2)) +
geom_violin() +
theme_bw() +
xlab(paste0("AI, ",designMatrix$experimentNames[experimentA])) +
ylab(paste0("AI, ",designMatrix$experimentNames[experimentB]," 5aza")) +
geom_jitter(size=0.2, aes(alpha=DAE), col="red", width=0.1) +
scale_alpha_manual(values=c(0, 0.5)) +
theme(legend.position = "None")
ai_changes_violin
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_changes_violin_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_cov_threshold_",thr_coverage,".pdf")
save_plot(ai_changes_violin, fig_name, base_aspect_ratio = 3)
ApplyCuts <- function(x) {
cut(x, breaks=seq(0, 1, by = 0.10),
labels=c("<0.1","0.1-0.2","0.2-0.3","0.3-0.4","0.4-0.5", "0.5-0.6", "0.6-0.7","0.7-0.8","0.8-0.9",">0.9"), include.lowest=TRUE)
}
ApplyCuts2 <- function(x) {
cut(x, breaks=seq(-0.05, 1.05, by = 0.10),
labels=c("<0.05","0.05-0.15","0.15-0.25","0.25-0.35","0.35-0.45","0.45-0.55", "0.55-0.65", "0.65-0.75","0.75-0.85","0.85-0.95",">0.95"), include.lowest=TRUE)
}
df_compare_noNA <- na.omit(df_compare)
df_compare_noNA$AI1_class <- sapply(df_compare_noNA$meanAI1, ApplyCuts)
table(df_compare_noNA$AI1_class)
ai_changes_violin <- ggplot(df_compare_noNA, aes(x = AI1_class, y = meanAI2)) +
geom_violin() +
theme_bw() +
xlab(paste0("AI, ",designMatrix$experimentNames[experimentA])) +
ylab(paste0("AI, ",designMatrix$experimentNames[experimentB]," 5aza")) +
geom_jitter(size=0.2, aes(alpha=DAE), col="red", width=0.1) +
scale_alpha_manual(values=c(0, 0.5)) +
theme(legend.position = "None")
ai_changes_violin
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_changes_violin_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_cov_threshold_",thr_coverage,".pdf")
save_plot(ai_changes_violin, file=fig_name, base_aspect_ratio = 3)
skew_stats <- df_compare_noNA %>% group_by(AI1_class) %>%
summarise(skew = (median(meanAI2)-mean(meanAI2)) / sd(meanAI2))
kable(skew_stats)
ApplyCuts <- function(x) {
cut(x, breaks=seq(0, 1, by = 0.10),
labels=c("<0.1","0.1-0.2","0.2-0.3","0.3-0.4","0.4-0.5", "0.5-0.6", "0.6-0.7","0.7-0.8","0.8-0.9",">0.9"), include.lowest=TRUE)
}
ApplyCuts2 <- function(x) {
cut(x, breaks=seq(-0.05, 1.05, by = 0.10),
labels=c("<0.05","0.05-0.15","0.15-0.25","0.25-0.35","0.35-0.45","0.45-0.55", "0.55-0.65", "0.65-0.75","0.75-0.85","0.85-0.95",">0.95"), include.lowest=TRUE)
}
df_compare_noNA <- na.omit(df_compare)
df_compare_noNA$AI1_class <- sapply(df_compare_noNA$meanAI1, ApplyCuts2)
table(df_compare_noNA$AI1_class)
ai_changes_violin <- ggplot(df_compare_noNA, aes(x = AI1_class, y = meanAI2)) +
geom_violin() +
theme_bw() +
xlab(paste0("AI, ",designMatrix$experimentNames[experimentA])) +
ylab(paste0("AI, ",designMatrix$experimentNames[experimentB]," 5aza")) +
geom_jitter(size=0.2, aes(alpha=DAE), col="red", width=0.1) +
scale_alpha_manual(values=c(0, 0.5)) +
theme(legend.position = "None")
ai_changes_violin
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_changes_violin_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_cov_threshold_",thr_coverage,"_0.05_cut.pdf")
save_plot(ai_changes_violin, file=fig_name, base_aspect_ratio = 3)
skew_stats <- df_compare_noNA %>% group_by(AI1_class) %>%
summarise(skew = (median(meanAI2)-mean(meanAI2)) / sd(meanAI2))
kable(skew_stats)
table(df_compare_noNA$AI1_class)
thr_coverage <- 40
minDifference <- 0.1
experimentA <- 2
experimentB <- 5
add_lm <- TRUE
df_compare <- PerformDiffAIAnalysisFor2Conditions(geneCountTab,
vect1CondReps = unlist(designMatrix$replicateNums[experimentA]),
vect2CondReps = unlist(designMatrix$replicateNums[experimentB]),
Q=0.95,
thr=thr_coverage,
EPS=1.3,
fullOUT=F
)
df_compare$deltaAI <- abs(df_compare$meanAI1 - df_compare$meanAI2)
df_compare$DAE <- F
df_compare$DAE[df_compare$diffAI==T & df_compare$deltaAI>=minDifference] <- T
fig_compare <- ggplot(df_compare, aes(x = meanAI1, y = meanAI2, col = DAE)) +
geom_point(size=0.5) +
theme_bw() +
xlab(paste0("AI, ",designMatrix$experimentNames[experimentA])) +
ylab(paste0("AI, ",designMatrix$experimentNames[experimentB]," 5aza")) +
scale_color_manual(name="Differential AI", labels=c("FALSE", "TRUE"), values=c("gray", "red")) +
coord_fixed()
if (add_lm)
fig_compare <- fig_compare + geom_smooth(method="lm")
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_min_diff_",minDifference,"_cov_threshold_",thr_coverage,".pdf")
if (add_lm)
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_min_diff_",minDifference,"_cov_threshold_",thr_coverage,"_add_lm.pdf")
save_plot(fig_compare, file=fig_name)
fig_compare
AI_table_with_CIs <- df_compare[,c(1,4,5,10,11,14:16)]
colnames(AI_table_with_CIs) <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentA]), paste0("AI_CI_",designMatrix$experimentNames[experimentA]), paste0("AI_",designMatrix$experimentNames[experimentB]), paste0("AI_CI_",designMatrix$experimentNames[experimentB]), "CI_diff", "AI_diff", "overall_diff")
write.table(AI_table_with_CIs, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables/AI_",designMatrix$experimentNames[experimentB],"_vs_",designMatrix$experimentNames[experimentA],"_min_diff_",minDifference,"_cov_threshold_",thr_coverage,".txt"), quote = F, row.names = F)
View(AI_table_with_CIs)
AI_table_with_CIs_DE <- merge(AI_table_with_CIs, DE_res, by.x="ensembl_gene_id", by.y="gene_id", all.y = T)
AI_table_with_CIs_DE <- na.omit(AI_table_with_CIs_DE)
corrPlot <- ggplot(AI_table_with_CIs_DE, aes(x=log2FoldChange, y=AI_DMSO-AI_high)) +
geom_point(size=0.5)
save_plot(corrPlot, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/log2foldChange_vs_AI_diff_high_DMSO_cov_", thr_coverage, ".pdf"))
ggplot(AI_table_with_CIs_DE, aes(x=group, y=AI_DMSO-AI_high)) +
geom_boxplot()
AI_table_with_CIs_DE$AI_change_group <- ifelse(AI_table_with_CIs_DE$AI_diff>=0.2, ">=0.2", ifelse(AI_table_with_CIs_DE$AI_diff>=0.1, ">=0.1", "<0.1"))
table(AI_table_with_CIs_DE$AI_change_group, AI_table_with_CIs_DE$group)
MA_AI <- ggplot(AI_table_with_CIs_DE[AI_table_with_CIs_DE$padj<0.05,], aes(x=baseMean, y=log2FoldChange, col=AI_change_group,  alpha=AI_change_group)) +
geom_point(size=0.75) +
scale_x_continuous(trans="log10",limits=c(1,300000)) +
scale_color_manual(values=c("gray", "red", "blue")) +
scale_alpha_manual(values=c(0.5, 1, 1)) +
theme_bw() +
geom_abline(slope=0,intercept=0,colour="red") +
ylim(c(-5,7))
save_plot(MA_AI, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/MA_AI_diff_only_",designMatrix$experimentNames[experimentB],"_vs_",designMatrix$experimentNames[experimentA],".pdf"), base_aspect_ratio = 2)
ggplot(AI_table_with_CIs_DE, aes(x=log2FoldChange, y=AI_DMSO-AI_high)) +
geom_point(size=0.5)
ggplot(AI_table_with_CIs_DE, aes(x=log2FoldChange, y=AI_DMSO-AI_high, col=AI_DMSO)) +
geom_point(size=0.5)
ggplot(AI_table_with_CIs_DE[(AI_table_with_CIs_DE$AI_DMSO < 0.15 | AI_table_with_CIs_DE$AI_DMSO > 0.85) ,], aes(x=log2FoldChange, y=AI_DMSO-AI_high, col=AI_DMSO)) +
geom_point(size=0.5)
ggplot(AI_table_with_CIs_DE[(AI_table_with_CIs_DE$AI_DMSO < 0.15 | AI_table_with_CIs_DE$AI_DMSO > 0.85) ,], aes(x=log2FoldChange, y=AI_DMSO-AI_high, col=AI_high)) +
geom_point(size=0.5)
corrPlot2 <- ggplot(AI_table_with_CIs_DE[(AI_table_with_CIs_DE$AI_DMSO < 0.15 | AI_table_with_CIs_DE$AI_DMSO > 0.85) ,], aes(x=log2FoldChange, y=AI_DMSO-AI_high, col=AI_high)) +
geom_point(size=0.5)
save_plot(corrPlot2, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/log2foldChange_vs_AI_diff_high_DMSO_cov_", thr_coverage, "_subset_to_extreme_AI_DMSO.pdf"))
#library(plotly)
#library(Cairo)
candidate_gene_table <- aiTable %>% filter(ensembl_gene_id %in% (df_compare_DMSO$ensembl_gene_id[df_compare_DMSO$candidate=="Yes"]))
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("knitr")
library("cowplot")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/ASE_functions.R")
source("~/Dropbox (Partners HealthCare)/replicates_ASE/code/ASE/R/PerformAIAnalysis.R")
# naming columns
nameColumns <- function(exp_n, rep_n)  {
paste0("exp", rep(exp_n, 2*rep_n), "_rep", rep(1:rep_n, each = 2), "_", rep(c("ref", "alt"), rep_n))
}
isMAE_test_CI <- function(x) {
thr <- x[3]
if ((is.na(x[1]))|(is.na(x[2]))) {
return("nd")
}
else {
if ((x[1])&((x[2]>=thr))) {
return("129_monoallelic")
}
else if ((x[1])&((x[2]<=(1-thr)))) {
return("CAST_monoallelic")
}
else if ((x[1])&((x[2]>=0.5))) {
return("129_biased")
}
else if ((x[1])&((x[2]<0.5))) {
return("CAST_biased")
}
else {return("biallelic")}
}
}
experimentNames <- c("control","DMSO","low","medium","high")
techReps <- c(2,2,2,5,2)
designMatrix <- BuildDesign(experimentNames, techReps)
inTabs <- "~/Dropbox (Partners HealthCare)/our_papers/5aza/data/ASE_results/pr_20180714_ISEKI_processed_gene_extended2.txt"
geneCountTab <- GetGatkPipelineTabs(inTabs, designMatrix$techReps, multiple = F, chrom = T)
colnames(geneCountTab)[2:27] <- c(nameColumns(1,2), nameColumns(2,2), nameColumns(3,2), nameColumns(4,5), nameColumns(5,2))
geneCountTab_chrX <- geneCountTab %>% filter(chr == "chrX") %>% select(-chr)
geneCountTab <- geneCountTab %>% filter(chr != "chrX") %>% select(-chr)
head(geneCountTab)
aiTable <- do.call(cbind, lapply(1:length(designMatrix$techReps), function(x){
round(CountsToAI(geneCountTab, reps = unlist(designMatrix$replicateNums[x]),thr=10),3)
}))
aiTable <- data.frame(geneCountTab$ensembl_gene_id, aiTable)
colnames(aiTable) <- c("ensembl_gene_id", designMatrix$experimentNames)
head(aiTable)
aiTable_chrX <- do.call(cbind, lapply(1:length(designMatrix$techReps), function(x){
round(CountsToAI(geneCountTab_chrX, reps = unlist(designMatrix$replicateNums[x]),thr=10),3)
}))
aiTable_chrX <- data.frame(geneCountTab_chrX$ensembl_gene_id, aiTable_chrX)
colnames(aiTable_chrX) <- c("ensembl_gene_id", designMatrix$experimentNames)
aiTable_chrX <- na.omit(aiTable_chrX)
aiTable_chrX$diff <- aiTable_chrX$high - aiTable_chrX$DMSO
ggplot(aiTable_chrX, aes(DMSO, high)) +
geom_point(size=0.5) +
coord_fixed() +
geom_abline(slope = 1, intercept = 0, col="gray")
thr_coverage <- 40
minDifference <- 0.1
experimentA <- 2
experimentB <- 5
add_lm <- TRUE
df_compare <- PerformDiffAIAnalysisFor2Conditions(geneCountTab,
vect1CondReps = unlist(designMatrix$replicateNums[experimentA]),
vect2CondReps = unlist(designMatrix$replicateNums[experimentB]),
Q=0.95,
thr=thr_coverage,
EPS=1.3,
fullOUT=F
)
df_compare$deltaAI <- abs(df_compare$meanAI1 - df_compare$meanAI2)
df_compare$DAE <- F
df_compare$DAE[df_compare$diffAI==T & df_compare$deltaAI>=minDifference] <- T
fig_compare <- ggplot(df_compare, aes(x = meanAI1, y = meanAI2, col = DAE)) +
geom_point(size=0.5) +
theme_bw() +
xlab(paste0("AI, ",designMatrix$experimentNames[experimentA])) +
ylab(paste0("AI, ",designMatrix$experimentNames[experimentB]," 5aza")) +
scale_color_manual(name="Differential AI", labels=c("FALSE", "TRUE"), values=c("gray", "red")) +
coord_fixed()
if (add_lm)
fig_compare <- fig_compare + geom_smooth(method="lm")
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_min_diff_",minDifference,"_cov_threshold_",thr_coverage,".pdf")
if (add_lm)
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_min_diff_",minDifference,"_cov_threshold_",thr_coverage,"_add_lm.pdf")
save_plot(fig_compare, file=fig_name)
fig_compare
AI_table_with_CIs <- df_compare[,c(1,4,5,10,11,14:16)]
colnames(AI_table_with_CIs) <- c("ensembl_gene_id", paste0("AI_",designMatrix$experimentNames[experimentA]), paste0("AI_CI_",designMatrix$experimentNames[experimentA]), paste0("AI_",designMatrix$experimentNames[experimentB]), paste0("AI_CI_",designMatrix$experimentNames[experimentB]), "CI_diff", "AI_diff", "overall_diff")
write.table(AI_table_with_CIs, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Tables/AI_",designMatrix$experimentNames[experimentB],"_vs_",designMatrix$experimentNames[experimentA],"_min_diff_",minDifference,"_cov_threshold_",thr_coverage,".txt"), quote = F, row.names = F)
ApplyCuts <- function(x) {
cut(x, breaks=seq(0, 1, by = 0.10),
labels=c("<0.1","0.1-0.2","0.2-0.3","0.3-0.4","0.4-0.5", "0.5-0.6", "0.6-0.7","0.7-0.8","0.8-0.9",">0.9"), include.lowest=TRUE)
}
ApplyCuts2 <- function(x) {
cut(x, breaks=seq(-0.05, 1.05, by = 0.10),
labels=c("<0.05","0.05-0.15","0.15-0.25","0.25-0.35","0.35-0.45","0.45-0.55", "0.55-0.65", "0.65-0.75","0.75-0.85","0.85-0.95",">0.95"), include.lowest=TRUE)
}
df_compare_noNA <- na.omit(df_compare)
df_compare_noNA$AI1_class <- sapply(df_compare_noNA$meanAI1, ApplyCuts)
table(df_compare_noNA$AI1_class)
ai_changes_violin <- ggplot(df_compare_noNA, aes(x = AI1_class, y = meanAI2)) +
geom_violin() +
theme_bw() +
xlab(paste0("AI, ",designMatrix$experimentNames[experimentA])) +
ylab(paste0("AI, ",designMatrix$experimentNames[experimentB]," 5aza")) +
geom_jitter(size=0.2, aes(alpha=DAE), col="red", width=0.1) +
scale_alpha_manual(values=c(0, 0.5)) +
theme(legend.position = "None")
ai_changes_violin
fig_name <- paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/AI_changes_violin_",designMatrix$experimentNames[experimentB],"_",designMatrix$experimentNames[experimentA],"_cov_threshold_",thr_coverage,".pdf")
save_plot(ai_changes_violin, file=fig_name, base_aspect_ratio = 3)
skew_stats <- df_compare_noNA %>% group_by(AI1_class) %>%
summarise(skew = (median(meanAI2)-mean(meanAI2)) / sd(meanAI2))
kable(skew_stats)
DE_res <- read_csv(paste0("~/Dropbox (Partners HealthCare)/MAE screen/DE_analysis/DE_SG",experimentB,"_SG",experimentA,".txt"))
DE_res$coll <- ifelse(DE_res$padj < 0.05, "red", "black")
MA_plot_all_genes <- ggplot(DE_res, aes(x=baseMean, y=log2FoldChange, col=coll)) +
geom_point(size=0.5) +
scale_x_continuous(trans="log10",limits=c(0.1,300000)) +
scale_color_manual(values=c("black", "red")) +
theme_bw() +
theme(legend.position = "None") +
geom_abline(slope=0,intercept=0,colour="red")
save_plot(MA_plot_all_genes, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/MA_",designMatrix$experimentNames[experimentB],"_vs_",designMatrix$experimentNames[experimentA],".pdf"), base_aspect_ratio = 2)
DE_res <- read_csv(paste0("~/Dropbox (Partners HealthCare)/MAE screen/DE_analysis/DE_SG",experimentB,"_SG",experimentA,".txt"))
DE_res <- DE_res[,c("gene_id", "log2FoldChange", "padj", "baseMean")]
DE_res$group <- ifelse(DE_res$padj>=0.05, "unchanged", ifelse(DE_res$log2FoldChange>0, "wentUp", "wentDown"))
DE_res$group[DE_res$group=="wentUp"&DE_res$log2FoldChange>=2] <- "wentUp+"
DE_res$group[DE_res$group=="wentUp+"&DE_res$log2FoldChange>=4] <- "wentUp++"
table(DE_res$group)
AI_table_with_CIs_DE <- merge(AI_table_with_CIs, DE_res, by.x="ensembl_gene_id", by.y="gene_id", all.y = T)
AI_table_with_CIs_DE$coll <- ifelse(AI_table_with_CIs_DE$padj < 0.05, "red", "black")
AI_table_with_CIs_DE$coll[is.na(AI_table_with_CIs_DE$AI_DMSO)|is.na(AI_table_with_CIs_DE$AI_high)] <- "gray"
MA_plot_with_AI <- ggplot(AI_table_with_CIs_DE, aes(x=baseMean, y=log2FoldChange, col=factor(coll))) +
geom_point(size=0.5) +
scale_x_continuous(trans="log10",limits=c(0.1,300000)) +
scale_colour_manual(values=c("black", "gray", "red")) +
theme_bw() +
theme(legend.position = "None") +
geom_abline(slope=0,intercept=0,colour="red")
save_plot(MA_plot_with_AI, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/MA_color_missing_",designMatrix$experimentNames[experimentB],"_vs_",designMatrix$experimentNames[experimentA],".pdf"), base_aspect_ratio = 2)
AI_table_with_CIs_DE <- merge(AI_table_with_CIs, DE_res, by.x="ensembl_gene_id", by.y="gene_id", all.y = T)
AI_table_with_CIs_DE <- na.omit(AI_table_with_CIs_DE)
corrPlot <- ggplot(AI_table_with_CIs_DE, aes(x=log2FoldChange, y=AI_DMSO-AI_high)) +
geom_point(size=0.5)
save_plot(corrPlot, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/log2foldChange_vs_AI_diff_high_DMSO_cov_", thr_coverage, ".pdf"))
corrPlot2 <- ggplot(AI_table_with_CIs_DE[(AI_table_with_CIs_DE$AI_DMSO < 0.15 | AI_table_with_CIs_DE$AI_DMSO > 0.85) ,], aes(x=log2FoldChange, y=AI_DMSO-AI_high, col=AI_high)) +
geom_point(size=0.5)
save_plot(corrPlot2, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/log2foldChange_vs_AI_diff_high_DMSO_cov_", thr_coverage, "_subset_to_extreme_AI_DMSO.pdf"))
ggplot(AI_table_with_CIs_DE, aes(x=group, y=AI_DMSO-AI_high)) +
geom_boxplot()
AI_table_with_CIs_DE$AI_change_group <- ifelse(AI_table_with_CIs_DE$AI_diff>=0.2, ">=0.2", ifelse(AI_table_with_CIs_DE$AI_diff>=0.1, ">=0.1", "<0.1"))
table(AI_table_with_CIs_DE$AI_change_group, AI_table_with_CIs_DE$group)
MA_AI <- ggplot(AI_table_with_CIs_DE[AI_table_with_CIs_DE$padj<0.05,], aes(x=baseMean, y=log2FoldChange, col=AI_change_group,  alpha=AI_change_group)) +
geom_point(size=0.75) +
scale_x_continuous(trans="log10",limits=c(1,300000)) +
scale_color_manual(values=c("gray", "red", "blue")) +
scale_alpha_manual(values=c(0.5, 1, 1)) +
theme_bw() +
geom_abline(slope=0,intercept=0,colour="red") +
ylim(c(-5,7))
save_plot(MA_AI, file=paste0("~/Dropbox (Partners HealthCare)/MAE screen/Drugs/Manuscript/Figures/MA_AI_diff_only_",designMatrix$experimentNames[experimentB],"_vs_",designMatrix$experimentNames[experimentA],".pdf"), base_aspect_ratio = 2)
ApplyCuts <- function(x) {
cut(x, breaks=seq(0, 1, by = 0.10),
labels=c("<0.1","0.1-0.2","0.2-0.3","0.3-0.4","0.4-0.5", "0.5-0.6", "0.6-0.7","0.7-0.8","0.8-0.9",">0.9"), include.lowest=TRUE)
}
AI_table_with_CIs_DE$AI_d <- AI_table_with_CIs_DE$AI_high - AI_table_with_CIs_DE$AI_DMSO
AI_table_with_CIs_DE$AI_DMSO_class <- sapply(AI_table_with_CIs_DE$AI_DMSO, ApplyCuts)
ggplot(AI_table_with_CIs_DE, aes(x=AI_d, y=log2FoldChange)) + geom_point(size=0.5) + facet_grid(~AI_DMSO_class)
thr_MAE <- 0.9
# compare AI in DMSO versus 0.5
AI_DMSO_vs_0.5 <- PerformDiffAIAnalysisForConditionNPoint(geneCountTab,
vectReps = unlist(designMatrix$replicateNums[experimentA]),
condName="Condition",
pt = 0.5,
thr = thr_coverage)
colnames(AI_DMSO_vs_0.5)[c(1,7)] <- c("ensembl_gene_id", "diff_0.5")
df_compare_DMSO <- merge(AI_table_with_CIs, AI_DMSO_vs_0.5[,c(1,7)], by.x="ensembl_gene_id", by.y="ensembl_gene_id")
df_compare_DMSO <- df_compare_DMSO[(!is.na(df_compare_DMSO$diff_0.5)&!is.na(df_compare_DMSO$CI_diff)),]
# find MAE genes in DMSO experiment
df_compare_DMSO <- df_compare_DMSO %>%
mutate(isMAE_DMSO = mapply(function(x, y, z) isMAE_test_CI(c(x,y,z)), diff_0.5, AI_DMSO, thr_MAE))
table(df_compare_DMSO$isMAE_DMSO)
# color by DMSO AI classification
ggplot(df_compare_DMSO, aes_(x = as.name("AI_DMSO"), y = as.name(paste0("AI_",designMatrix$experimentNames[experimentB])), col=as.name("isMAE_DMSO"))) +
geom_point(size=0.5) +
theme_bw()
# find candidate genes
df_compare_DMSO$candidate <- "No"
df_compare_DMSO$candidate[((df_compare_DMSO$isMAE_DMSO=="CAST_monoallelic"|df_compare_DMSO$isMAE_DMSO=="129_monoallelic")&(df_compare_DMSO$overall_diff==T))] <- "Yes"
ggplot(df_compare_DMSO, aes_(x = as.name("AI_DMSO"), y = as.name(paste0("AI_",designMatrix$experimentNames[experimentB])), col=as.name("candidate"))) +
geom_point(size=0.5) +
theme_bw()
#library(plotly)
#library(Cairo)
candidate_gene_table <- aiTable %>% filter(ensembl_gene_id %in% (df_compare_DMSO$ensembl_gene_id[df_compare_DMSO$candidate=="Yes"]))
candidate_gene_table_long <- candidate_gene_table %>% tidyr::gather(experiment, AI, -ensembl_gene_id)
cand_genes_color <- c("ENSMUSG00000091345")
candidate_gene_table_long$interest <- "gray"
candidate_gene_table_long$th <- 0.1
candidate_gene_table_long$interest[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- "red"
candidate_gene_table_long$th[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- 0.2
candidate_gene_table_long$experiment <- as.factor(candidate_gene_table_long$experiment)
levels(candidate_gene_table_long$experiment) <- c("control","DMSO","low","medium","high")
ggplot(candidate_gene_table_long, aes(x=experiment, y=AI, group=ensembl_gene_id)) +
geom_point(size=0.1) +
geom_line(col=as.character(candidate_gene_table_long$interest), group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
theme_bw()
#save_plot(p, file="plo.pdf", base_aspect_ratio = 1.5)
#  geom_line(size=0.1, col=as.character(candidate_gene_table_long$interest)) +
#p <- ggplotly(p)
#p
#library(plotly)
#library(Cairo)
candidate_gene_table <- aiTable %>% filter(ensembl_gene_id %in% (df_compare_DMSO$ensembl_gene_id[df_compare_DMSO$candidate=="Yes"]))
candidate_gene_table_long <- candidate_gene_table %>% tidyr::gather(experiment, AI, -ensembl_gene_id)
cand_genes_color <- c("ENSMUSG00000091345")
candidate_gene_table_long$interest <- "gray"
candidate_gene_table_long$th <- 0.1
candidate_gene_table_long$interest[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- "red"
candidate_gene_table_long$th[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- 0.2
candidate_gene_table_long$experiment <- as.factor(candidate_gene_table_long$experiment)
levels(candidate_gene_table_long$experiment) <- c("control","DMSO","low","medium","high")
ggplot(candidate_gene_table_long, aes(x=experiment, y=AI, group=ensembl_gene_id)) +
geom_point(size=0.1) +
#geom_line(col=as.character(candidate_gene_table_long$interest), group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
geom_line(group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
theme_bw()
#save_plot(p, file="plo.pdf", base_aspect_ratio = 1.5)
#  geom_line(size=0.1, col=as.character(candidate_gene_table_long$interest)) +
#p <- ggplotly(p)
#p
ggplot(candidate_gene_table_long, aes(x=experiment, y=AI, group=ensembl_gene_id)) +
geom_point(size=0.1) +
#geom_line(col=as.character(candidate_gene_table_long$interest), group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
geom_line(group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
theme_bw()
#library(plotly)
#library(Cairo)
candidate_gene_table <- aiTable #%>% filter(ensembl_gene_id %in% (df_compare_DMSO$ensembl_gene_id[df_compare_DMSO$candidate=="Yes"]))
candidate_gene_table_long <- candidate_gene_table %>% tidyr::gather(experiment, AI, -ensembl_gene_id)
cand_genes_color <- c("ENSMUSG00000091345")
candidate_gene_table_long$interest <- "gray"
candidate_gene_table_long$th <- 0.1
candidate_gene_table_long$interest[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- "red"
candidate_gene_table_long$th[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- 0.2
candidate_gene_table_long$experiment <- as.factor(candidate_gene_table_long$experiment)
levels(candidate_gene_table_long$experiment) <- c("control","DMSO","low","medium","high")
ggplot(candidate_gene_table_long, aes(x=experiment, y=AI, group=ensembl_gene_id)) +
geom_point(size=0.1) +
#geom_line(col=as.character(candidate_gene_table_long$interest), group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
geom_line(group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
theme_bw()
#save_plot(p, file="plo.pdf", base_aspect_ratio = 1.5)
#  geom_line(size=0.1, col=as.character(candidate_gene_table_long$interest)) +
#p <- ggplotly(p)
#p
#library(plotly)
#library(Cairo)
candidate_gene_table <- aiTable[sample(aiTable$ensembl_gene_id, 200),] #%>% filter(ensembl_gene_id %in% (df_compare_DMSO$ensembl_gene_id[df_compare_DMSO$candidate=="Yes"]))
candidate_gene_table_long <- candidate_gene_table %>% tidyr::gather(experiment, AI, -ensembl_gene_id)
cand_genes_color <- c("ENSMUSG00000091345")
candidate_gene_table_long$interest <- "gray"
candidate_gene_table_long$th <- 0.1
candidate_gene_table_long$interest[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- "red"
candidate_gene_table_long$th[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- 0.2
candidate_gene_table_long$experiment <- as.factor(candidate_gene_table_long$experiment)
levels(candidate_gene_table_long$experiment) <- c("control","DMSO","low","medium","high")
ggplot(candidate_gene_table_long, aes(x=experiment, y=AI, group=ensembl_gene_id)) +
geom_point(size=0.1) +
#geom_line(col=as.character(candidate_gene_table_long$interest), group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
geom_line(group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
theme_bw()
#save_plot(p, file="plo.pdf", base_aspect_ratio = 1.5)
#  geom_line(size=0.1, col=as.character(candidate_gene_table_long$interest)) +
#p <- ggplotly(p)
#p
aiTable[sample(aiTable$ensembl_gene_id, 200),1:10]
aiTable[sample(aiTable$ensembl_gene_id, 2),]
sample(aiTable$ensembl_gene_id, 2)
#library(plotly)
#library(Cairo)
candidate_gene_table <- aiTable %>% filter(ensembl_gene_id %in% sample(aiTable$ensembl_gene_id, 200))#(df_compare_DMSO$ensembl_gene_id[df_compare_DMSO$candidate=="Yes"]))
candidate_gene_table_long <- candidate_gene_table %>% tidyr::gather(experiment, AI, -ensembl_gene_id)
cand_genes_color <- c("ENSMUSG00000091345")
candidate_gene_table_long$interest <- "gray"
candidate_gene_table_long$th <- 0.1
candidate_gene_table_long$interest[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- "red"
candidate_gene_table_long$th[candidate_gene_table_long$ensembl_gene_id %in% cand_genes_color] <- 0.2
candidate_gene_table_long$experiment <- as.factor(candidate_gene_table_long$experiment)
levels(candidate_gene_table_long$experiment) <- c("control","DMSO","low","medium","high")
ggplot(candidate_gene_table_long, aes(x=experiment, y=AI, group=ensembl_gene_id)) +
geom_point(size=0.1) +
#geom_line(col=as.character(candidate_gene_table_long$interest), group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
geom_line(group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
theme_bw()
#save_plot(p, file="plo.pdf", base_aspect_ratio = 1.5)
#  geom_line(size=0.1, col=as.character(candidate_gene_table_long$interest)) +
#p <- ggplotly(p)
#p
ggplot(candidate_gene_table_long, aes(x=experiment, y=AI, group=ensembl_gene_id)) +
geom_point(size=0.1) +
#geom_line(col=as.character(candidate_gene_table_long$interest), group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
geom_line(group=candidate_gene_table_long$ensembl_gene_id, size=candidate_gene_table_long$th) +
theme_bw()
library(lubridate)
first_diagnosed_dem <- data.frame(year_of_death=c(2018,2015,2017,2014), earliest_date=c("2013-01-01","2013-01-01","2013-01-01","2013-01-01"))
first_diagnosed_dem$earliest_date <- as.Date(first_diagnosed_dem$earliest_date, "%Y-%m-%d")
# calculate difference in months
# won't make much sense unless we have month of death (not only year of death)
# still good to know for future references (if we get date_of_death column later)
first_diagnosed_dem$months_after_diagn <- as.duration(interval(first_diagnosed_dem$earliest_date,as.Date(paste0(first_diagnosed_dem$year_of_death, '-01-01')))) %/% as.duration(months(1))
# makes more sense to calculate difference in years
first_diagnosed_dem$years_after_diagn <- first_diagnosed_dem$year_of_death - year(first_diagnosed_dem$earliest_date)
first_diagnosed_dem
ggplot(first_diagnosed_dem, aes(x=years_after_diagn)) + geom_histogram()
first_diagnosed_dem$years_after_diagn[first_diagnosed_dem$years_after_diagn<0 | first_diagnosed_dem$years_after_diagn > 25] <- NA
table(first_diagnosed_dem$years_after_diagn)
first_diagnosed_dem$years_after_diagn$before_2013 <- ifelse(year(first_diagnosed_dem$earliest_date)<2013, T, F)
first_diagnosed_dem$before_2013 <- ifelse(year(first_diagnosed_dem$earliest_date)<2013, T, F)
View(first_diagnosed_dem)
first_diagnosed_dem$before_2015 <- ifelse(year(first_diagnosed_dem$earliest_date)<2015, T, F)
first_diagnosed_dem$before_2015 <- ifelse(year(first_diagnosed_dem$earliest_date)<2015, T, F)
ggplot(first_diagnosed_dem, aes(x=years_after_diagn)) + geom_histogram() + facet_grid(~before_2013)
ggplot(first_diagnosed_dem, aes(x=years_after_diagn, col=before_2013, fill=before_2013)) + geom_density(alpha=0.5)
